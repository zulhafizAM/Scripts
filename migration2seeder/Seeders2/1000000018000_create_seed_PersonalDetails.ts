import BaseSeeder from '@ioc:Adonis/Lucid/Seeder';
import { DateTime } from 'luxon';
import { Faker, en } from '@faker-js/faker';
import PersonalDetail from 'App/Models/PersonalDetail';
import State from 'App/Models/State';
import Race from 'App/Models/Race';
import Religion from 'App/Models/Religion';
import State from 'App/Models/State';
import State from 'App/Models/State';

export default class extends BaseSeeder {

	public async run () {
		const states = await State.all();
		const races = await Race.all();
		const religions = await Religion.all();
		const states = await State.all();
		const states = await State.all();
		const faker = new Faker({ locale: [en] });
		await PersonalDetail.createMany([
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				name: faker.person.fullName(),
				birthStateId: states![Math.floor(Math.random() * 10)].id,
				raceId: races![Math.floor(Math.random() * 10)].id,
				religionId: religions![Math.floor(Math.random() * 10)].id,
				mailStateId: states![Math.floor(Math.random() * 10)].id,
				homeStateId: states![Math.floor(Math.random() * 10)].id,
				alternativeName: faker.person.fullName(),
				isMalaysian: true,
				identityDocumentType: faker.person.fullName(),
				identityDocumentNumber: faker.person.fullName(),
				email: faker.person.fullName(),
				marital: faker.person.fullName(),
				gender: faker.person.fullName(),
				phoneNumber: faker.person.fullName(),
				homeNumber: faker.person.fullName(),
				birthDate: DateTime.fromJSDate(faker.date.past()),
				birthplace: faker.person.fullName(),
				isExPoliceOrSoldier: true,
				homeAddress: faker.person.fullName(),
				homePoscode: faker.person.fullName(),
				homeCity: faker.person.fullName(),
				mailAddress: faker.person.fullName(),
				mailPoscode: faker.person.fullName(),
				mailCity: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
		])
	}
}
