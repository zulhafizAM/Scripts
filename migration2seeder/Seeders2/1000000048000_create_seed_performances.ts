import BaseSeeder from '@ioc:Adonis/Lucid/Seeder';
import { DateTime } from 'luxon';
import { Faker, en } from '@faker-js/faker';
import Performance from 'App/Models/Performance';
import Employee from 'App/Models/Employee';
import Employee from 'App/Models/Employee';
import Employee from 'App/Models/Employee';

export default class extends BaseSeeder {

	public async run () {
		const employees = await Employee.all();
		const employees = await Employee.all();
		const employees = await Employee.all();
		const faker = new Faker({ locale: [en] });
		await Performance.createMany([
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
			{
				employeeId: employees![Math.floor(Math.random() * 10)].id,
				PPKEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				PPPEmployeeId: employees![Math.floor(Math.random() * 10)].id,
				year: faker.number.int({ max: 10 }),
				reviewDuration: faker.number.int({ max: 10 }),
				JPAFormPerformance: faker.person.fullName(),
				insertDate: DateTime.fromJSDate(faker.date.past()),
				propertyStatus: faker.person.fullName(),
				approvedPropertyDate: DateTime.fromJSDate(faker.date.past()),
				gradeMarkPPP: faker.number.float({ precision: 0.01 }),
				gradeMarkPPK: faker.number.float({ precision: 0.01 }),
				skillMarkPPP: faker.number.float({ precision: 0.01 }),
				skillMarkPPK: faker.number.float({ precision: 0.01 }),
				individualMarkPPP: faker.number.float({ precision: 0.01 }),
				individualMarkPPK: faker.number.float({ precision: 0.01 }),
				contributeMarkPPP: faker.number.float({ precision: 0.01 }),
				contributeMarkPPK: faker.number.float({ precision: 0.01 }),
				PPP: faker.number.float({ precision: 0.01 }),
				PPK: faker.number.float({ precision: 0.01 }),
				average: faker.number.float({ precision: 0.01 }),
				PPSM: faker.number.float({ precision: 0.01 }),
				isAmend: true,
				description: faker.person.fullName(),
				salaryMovement: faker.person.fullName(),
				justification: faker.person.fullName(),
				yearlyAPC: faker.person.fullName(),
				active: true,
				createdBy: 'Admin'
			},
		])
	}
}
